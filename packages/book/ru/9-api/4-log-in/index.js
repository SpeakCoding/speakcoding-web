import React from 'react';
import { Section } from '@sc/ui';
import Term from '../../glossary/Term';

export default () => (
    <>
        <Section>
            <Section.Block>
                <Section.Main>
                    <h2>Log In</h2>
                    <p>
                        Большая часть информации, которой программы обмениваются с сервером,
                        завязана на конкретного пользователя и его id. Так же как вы выдаете онлайн
                        магазину специальное разрешение на доступ к вашему банку в момент оплаты,
                        сервер запрашивает у пользователей аутентификацию. Представьте, что при
                        выполнении любого запроса, вам необходимо было бы бы заново вводить и
                        отправлять имя пользователя и пароль. По многим причинам это было бы очень
                        рискованно и не очень удобно, поэтому со временем появилась процедура
                        аутентификации. Она позволила заменить ввод имени пользователя и пароля при
                        каждом запросе на функцию логина. В этом запросе пользователь один раз
                        отправляет свое имя и пароль и, после процедуры сверки информации об этом
                        id, сервер создает “ключ”. Он записывает его в словарь, сохраняя в своей
                        базе данных, и отправляет подтверждение устройству. Этот ключ или{' '}
                        <Term id='auth-token' tooltip>
                            токен авторизации
                        </Term>{' '}
                        (access token), в дальнейшем будет добавляться к каждому запросу на сервер.
                        Обычно ключи очень длинные, не дублируют пароль и ограничены по времени,
                        чтобы их невозможно было вычислить. Таким образом log in - это процесс{' '}
                        <b>создания</b> “ключа” (method: POST).
                    </p>
                    <p>
                        Когда происходит логин, устройство также формирует и сохраняет в переменную
                        current user экземпляр вашего пользователя, в нем будет хранится вся
                        информация о профиле: посты, фоловеры, лайки, комментарии. Кроме того,
                        устройство (клиент) сохранит информацию об этом пользователе - кэширует
                        этого пользователя - в свою базу данных, чтобы потом передать на сервер.
                    </p>
                    <p>
                        Как вы могли догадаться, log out - это очень похожий запрос, на{' '}
                        <b>удаление</b> “ключа” (method: DELETE). Этому запросу не нужны данные о
                        конкретном пользователе: он удаляет только тот самый временный ключ, чтобы
                        при следующем логине создать новый и обеспечить безопасность вашего профиля.
                    </p>
                </Section.Main>
                <Section.Side>
                    <Section.Sticky>img</Section.Sticky>
                </Section.Side>
            </Section.Block>
        </Section>
    </>
);

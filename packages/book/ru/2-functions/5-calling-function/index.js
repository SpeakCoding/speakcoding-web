import React from 'react';
import { Code, Grid, HL, Pre, Section } from '@sc/ui';

const codeUser = `
class [[User]](orange _ 1) {
    ...

    func [[muteProfile]](green _ 1)() {
        [[posts = self.getPosts()]](plum _ 1)
        [[stories = self.getStories()]](plum _ 1)
        [[posts.mute()]](plum _ 1)
        [[stories.mute()]](plum _ 1)   
    }
}`;

export default () => (
    <>
        <Section>
            <Section.Main>
                <h2>Пример записи обращения/вызова функции</h2>
                <p>Общий вид обращения:</p>
                <Pre>имя_функции(список_вводных)</Pre>
                <ol>
                    <li>
                        Обращение к функции также можно легко найти по круглым скобкам, они остаются
                        в обращении независимо от того, есть у функции вводные или нет.
                    </li>
                    <li>
                        Перед скобками так же написано имя функции (мы используем имя заданное в ее
                        описании).
                    </li>
                    <li>
                        Перечисление вводных через запятую (в том же порядке как в определении
                        функции).
                    </li>
                    <li>
                        Отличия от определения функции:
                        <ul>
                            <li>нет ключевого слова перед названием функции</li>
                            <li>использовано имя уже использованное ранее в описании</li>
                            <li>в перечислении вводных не написаны классы</li>
                            <li>
                                нет описания шагов, тела функции, соответственно, нет фигурных
                                скобок или двоеточия после круглых скобок
                            </li>
                        </ul>
                    </li>
                    <li>
                        Функции класса описывают действия, которые должны быть совершены по
                        отношению к экземпляру класса. Таким образом, вызов функции всегда
                        происходит по отношению к конкретному экземпляру и в тексте кода обязательно
                        идет с упоминанием экземпляра, для которого мы ее вызываем. В тексте кода
                        обращение к функции пишется через точку после упоминания экземпляра.
                    </li>
                </ol>
            </Section.Main>
            <Section.Side />
        </Section>
        <Section>
            <Section.Main>
                <p>Пример вызова функции</p>
                <Grid>
                    <Grid.Cell border='right bottom'>
                        <b>Описание и пояснение функции текстом</b>
                    </Grid.Cell>
                    <Grid.Cell border='bottom'>
                        <b>Как это выглядит в коде</b>
                    </Grid.Cell>

                    <Grid.Cell border='right'>
                        Функция, которая позволяет временно перестать читать посты пользователя:
                        <br /> <br />
                        Функция{' '}
                        <HL color='orange' active inline={3}>
                            класса User
                        </HL>
                        , которую мы назовем{' '}
                        <HL color='green' active inline={3}>
                            “перестать читать юзера”
                        </HL>
                        ,{' '}
                        <HL color='plum' active inline={3}>
                            идентифицирует посты и сториз этого юзера и последовательно исключает
                            посты из твоего фида.
                        </HL>
                        .
                    </Grid.Cell>

                    <Grid.Cell>
                        <Code value={codeUser} />
                    </Grid.Cell>
                </Grid>
            </Section.Main>
        </Section>
    </>
);

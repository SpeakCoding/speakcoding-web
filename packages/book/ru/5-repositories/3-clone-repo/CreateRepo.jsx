import React from 'react';
import { Button, Expand, Section } from '@sc/ui';

export default () => (
    <>
        <Section.Block>
            <Section.Main narrow>
                <h2>
                    (Дополнительно) Создание репозитория{' '}
                    <Expand.Control htmlFor='5-3-3'>
                        <Button variant='rounded'>⤵</Button>
                    </Expand.Control>
                </h2>
            </Section.Main>
        </Section.Block>

        <Section.Block>
            <Section.Main>
                <Expand id='5-3-3'>
                    <Section.Block>
                        <Section.Main narrow>
                            <p>
                                После создания профиля пользователя на Github вы можете создать
                                репозиторий любого вашего проекта. Чтобы создать новый репозиторий
                                на github, мы должны вначале придумать для него имя. Все названия
                                внутри одного профиля пользователя должны быть уникальными.
                            </p>
                            <p>
                                При создании можно добавить описание репозитория. Выбрать, будет ли
                                он публичным (файлы видны всем пользователям) или приватным, а также
                                выбрать инициализацию с файлом Readme. Это поможет, если в
                                дальнейшем вы будете работать с этим репозиторием через программу
                                git, и даст возможность клонировать репозиторий на ваш компьютер.
                            </p>
                            <p>
                                Итак, вы создали пустой репозиторий, в котором пока находится только
                                один файл - Readme.md.
                            </p>
                            <p>
                                Когда вы создаете локальную папку с кодом на своем устройстве, вам
                                нужно привязать ее к репозиторию на сервере, так как только после
                                этого серверная копия начинает следить за обновлениями кода. Она не
                                обновляется автоматически, вы можете выбрать, какие изменения
                                переносить. Синхронизацию между серверной версией и локальным
                                проектом тоже удобно вести через GitHub Desktop. Из изменений в
                                коде, будь то в облачном хранилище или в вашей локальной копии,
                                формируется новая “версия”/новая ветка кода, commit. С помощью
                                GitHub Desktop вы можете “откатиться” до нужной версии, в случае,
                                если после добавления новой функции программа перестала работать.
                            </p>
                            <p>
                                Любой программист, работающий с конкретным проектом, может выбрать
                                необходимую ему версию кода программы. Давайте чуть больше поговорим
                                о том, что можно делать с репозиторием после того, как вы его
                                скачали.
                            </p>
                        </Section.Main>
                    </Section.Block>
                </Expand>
            </Section.Main>
        </Section.Block>
    </>
);

import React from 'react';
import { Link, Section } from '@sc/ui';
import { Assignment } from '../../../components';
import EditorExample from '../../../common/5/editor';

export default () => (
    <>
        <Section>
            <Section.Main narrow>
                <h1>Редакторы (code environment)</h1>
                <p>Скачанный код можно открыть в любом, самом простом текстовом редакторе.</p>
                <p>
                    Однако существуют специальные редакторы с расширенным функционалом: в них
                    добавили подсветку кода, что позволило увеличить производительность и легче
                    читать код, появилась поддержка автоматического дополнения функций (похоже на
                    подсказки T9 в вашем телефоне), а также моментальное отображение строк с
                    ошибками.
                </p>
                <p>
                    Для создания программ для мобильных телефонов стоит использовать редакторы, в
                    которых есть встроенные визуальные инструменты по созданию интерфейса, а также
                    возможность компиляции и виртуального тестирования программы на разных
                    устройствах.
                </p>
                <p>
                    Как мы уже упоминали, для создания программ для iPhone необходимо использовать{' '}
                    <Link href='https://apps.apple.com/us/app/xcode/id497799835?mt=12' blank>
                        редактор Xcode
                    </Link>{' '}
                    от Apple.
                </p>
            </Section.Main>
        </Section>

        <Assignment id='ru/9' />

        <Section>
            <EditorExample variant={1}>
                <Section.Block>
                    <Section.Main>
                        <p>
                            <EditorExample.Link name='tree'>Слева</EditorExample.Link> в редакторе{' '}
                            отображается дерево файлов вашего проекта. В процессе работы вы часто
                            будете переходить от одного файла к другому, и эта панель позволит легко
                            переключаться, выбрав файл из списка. Вы увидите{' '}
                            <EditorExample.Link name='classes'>
                                файлы с названиями наших основных классов
                            </EditorExample.Link>{' '}
                            (User.swift, Post.swift, etc), а также{' '}
                            <EditorExample.Link name='controllers'>
                                файлы с названием классов контроллеров нашего приложения
                            </EditorExample.Link>{' '}
                            (FeedViewController.swift, etc).
                        </p>
                        <p>
                            После того, как вы выбрали файл, его содержимое отобразится в основной{' '}
                            <EditorExample.Link name='main'>центральной части</EditorExample.Link> -
                            редакторе кода. Все строки в редакторе пронумерованы, чтобы
                            разработчикам легче было читать код и находить в нем ошибки. Также
                            редактор подсвечивает функциональные слова. Кликнув мышкой/правой
                            кнопкой на любой класс, можно найти опцию Jump to Definition и быстро
                            перейти на описание этого класса (или кликнув левой кнопкой, зажав
                            Control+Command).
                        </p>
                    </Section.Main>
                    <Section.Side />
                </Section.Block>
            </EditorExample>
        </Section>

        <Assignment id='ru/10' />

        <Section>
            <Section.Main narrow>
                <p>
                    Вы также можете открыть визуальный редактор для xib файлов, которые мы обсуждали
                    в предыдущей главе. Например, в файле PostFeedView.xib, вы увидите схематическое
                    визуальное отображение этой части экрана. Можете открыть Asset.xcassets и
                    увидеть список стандартных картинок и иконок, используемых приложением.
                </p>
                <p>
                    В самом верху списка файлов, можно найти сам проект (SpeakCoding). Выбрав его в
                    редакторе, вы увидите набор параметров нашего проекта. Единственный параметр,
                    который вам сейчас предстоит исправить - это “Team”. Вы можете найти его во
                    вкладке Sign-in & Capabilities. Тут вам нужно будет указать ваш Apple ID,
                    который будет использован для верификации приложения, перед тем как вы сможете
                    установить его на свой телефон.
                </p>
                <p>
                    В верхней части редактора и списка файлов вы найдете кнопку для компиляции
                    (выглядит как значок “Проиграть”/Play) и выбор устройств из списка. Вы можете
                    выбрать эмулятор одной из версий операционной системы iPhone или подключить по
                    кабелю свой телефон.
                </p>
                <p>
                    Чтобы установить получившееся приложение на ваш телефон, его необходимо
                    подключить через кабель. После чего он появится в списке выбора устройств.
                    Первая попытка будет неудачной (но ее все равно необходимо произвести), так как
                    необходимо разрешить на вашем телефоне установку приложений не из AppStore с
                    вашего компьютера. Для этого на вашем телефоне зайдите в Settings > General >
                    Profiles or Device Management. Там необходимо выбрать появившийся сертификат и
                    подтвердить, что ему можно доверять (Trust). После этого вы сможете повторить
                    установку приложения, и оно будет запущено на вашем телефоне.
                </p>
            </Section.Main>
        </Section>

        <Assignment id='ru/11' />

        <Assignment id='ru/12' />

        <Assignment id='ru/13' />
    </>
);
